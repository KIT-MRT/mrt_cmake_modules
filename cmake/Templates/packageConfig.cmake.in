# File was automatically generated by mrt_cmake_modules
#
# This file exports the following variables:
# @PROJECT_NAME@_LIBRARIES: Library targets that should be linked against
# @PROJECT_NAME@_EXPORTED_TARGETS: As required by catkin
# @PROJECT_NAME@_EXPORTS_TARGETS: To indicate this package exports targets instead of plain libraries

@PACKAGE_INIT@

set(@PROJECT_NAME@_LIBRARIES @_mrt_libraries@)  # things that dependend packages should link against

# catkin wants this. Don't bother with it.
set(@PROJECT_NAME@_EXPORTED_TARGETS)

# mark this as a catkin project
set(@PROJECT_NAME@_FOUND_CATKIN_PROJECT TRUE)
set(@PROJECT_NAME@_EXPORTS_TARGETS TRUE)

function(_init_package_dependencies)
    # gets all targets that this package export_depends on and sets var to the name of these targets.
    # this is in a separate function so that variables set by find_package calls do not escape into the scope of the CMakeLists
    if(NOT EXISTS "${CMAKE_CURRENT_LIST_DIR}/auto_dep_vars.cmake")
        message(FATAL_ERROR "Project @PROJECT_NAME@ did not export its dependencies properly! No auto_dep file was found.")
    endif()
    # Resolve deps in the same style they were resolved when this project was built
    include("${CMAKE_CURRENT_LIST_DIR}/auto_dep_vars.cmake") # sets _MRT_EXPORT_PACKAGES_
    set(AutoDeps_PREFIX "@PROJECT_NAME@::")
    set(AutoDeps_FIND_COMPONENTS ${_MRT_EXPORT_PACKAGES_})
    set(AutoDeps_NO_CATKIN_EXPORT TRUE) # disable variable export because catkin is not listening here
    include("${CMAKE_CURRENT_LIST_DIR}/@PROJECT_NAME@FindAutoDeps.cmake")
    find_package(OpenMP) # openmp is by default always a dependency
endfunction()

if(@PROJECT_NAME@_LIBRARIES)
    _init_package_dependencies()
endif()

# add the targets
if(EXISTS "${CMAKE_CURRENT_LIST_DIR}/@PROJECT_NAME@Targets.cmake")
    include("${CMAKE_CURRENT_LIST_DIR}/@PROJECT_NAME@Targets.cmake")
endif()

# add dependencies to other things generated by this package
set(@PROJECT_NAME@_targets @_mrt_targets@)
if(@PROJECT_NAME@_targets AND NOT TARGET @PROJECT_NAME@::mrt_exported_targets)
    set(namespaced_exported_targets "")
    foreach(t @PROJECT_NAME@_targets)
        if(NOT TARGET ${target})
            add_library(@PROJECT_NAME@::${t} INTERFACE IMPORTED)
            list(APPEND namespaced_exported_targets @PROJECT_NAME@::${t})
        else()
            list(APPEND namespaced_exported_targets ${t})
        endif()
    endforeach()
    add_library(@PROJECT_NAME@::mrt_exported_targets INTERFACE IMPORTED)
    add_dependencies(@PROJECT_NAME@::mrt_exported_targets ${namespaced_exported_targets})
    list(APPEND @PROJECT_NAME@_LIBRARIES @PROJECT_NAME@::mrt_exported_targets)
    unset(namespaced_exported_targets)
endif()

set(@PROJECT_NAME@_EXTRAS_FILE @_mrt_extras_file@)
if(@PROJECT_NAME@_EXTRAS_FILE)
    include(${@PROJECT_NAME@_EXTRAS_FILE})
endif()
unset(@PROJECT_NAME@_EXTRAS_FILE)
unset(@PROJECT_NAME@_targets)
